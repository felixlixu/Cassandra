package org.apache.cassandra.locator;

import java.util.ArrayList;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;

import org.apache.cassandra.dht.Token;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TokenMetadata {

	private static Logger logger = LoggerFactory.getLogger(TokenMetadata.class);
	
	private final ReadWriteLock lock=new ReentrantReadWriteLock(true);
	private ArrayList<Token> sortedTokens;
	
	/* list of subscribers that are notified when the tokenToEndpointMap changed */
	 private final CopyOnWriteArrayList<AbstractReplicationStrategy> subscribers = new CopyOnWriteArrayList<AbstractReplicationStrategy>();

		public void register(AbstractReplicationStrategy subscriber){
			subscribers.add(subscriber);
		}

		public ArrayList<Token> sortedTokens() {
			lock.readLock().lock();
			try{
				return sortedTokens;
			}
			finally{
				lock.readLock().unlock();
			}
		}
}
